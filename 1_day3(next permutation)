class Solution{
    static List<Integer> nextPermutation(int N, int arr[]){
        int index1=-1;
        int index2=0;
        for(int i=N-2;i>=0;i--)
        {
            if(arr[i+1]>arr[i])
            {
                index1=i;
                break;
            }
        }
        if(index1 !=-1)
        {
        for(int i=N-1;i>=0;i--)
        
        
        {
            if(arr[i]>arr[index1])
            {
                index2=i;
                break;
            }
        }
        int temp=arr[index1];
        arr[index1]=arr[index2];
        arr[index2]=temp;
        
        
        int k=index1+1;
        int j=N-1;
        while(k<j)
        {
          temp=arr[k];
         arr[k]=arr[j];
         arr[j]=temp;
        k++;
        j--;
        }
        }
        else
        
        {
          Arrays.sort(arr);
        }
        List<Integer>list=new ArrayList<>();
        for(int i=0;i<arr.length;i++)
        {
            list.add(arr[i]);
        }
        return list;
        
    }
}
