class Solution {
    public boolean exist(char[][] board, String word) {
        
        
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board[0].length;j++)
            {
                if(word.charAt(0)==board[i][j])
                {
                 boolean ans=   dfs(board,i,j,word,0);
                    {
                        if(ans)
                        {
                        return true;
                        }
                    }
                }
            }
        }
        return false;
        
    }
    public static boolean dfs(char board[][],int i,int j,String word,int c)
    {
        if(word.length()==c)
        {
            return true;
        }
        if(i<0 || j<0 || i==board.length || j==board[0].length || board[i][j]!=word.charAt(c) )
        {
            return false;
        }
        char temp=board[i][j];
        board[i][j]='0';
        boolean left=dfs(board,i,j-1,word,c+1);
        boolean right=dfs(board,i,j+1,word,c+1);
        boolean up=dfs(board,i-1,j,word,c+1);
        boolean down=dfs(board,i+1,j,word,c+1);
        board[i][j]=temp;
        if(left|| right || up || down) 
        {
            return true;
        }
        return false;
    }
}
